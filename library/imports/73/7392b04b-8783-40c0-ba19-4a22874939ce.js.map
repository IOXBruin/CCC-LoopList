{"version":3,"sources":["assets/looplist/LoopListItem.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,kBAAyC,EAAxC,oBAAO,EAAE,sBAAQ,EAAE,cAAqB,CAAC;AAIhD;IAA0C,gCAAY;IAFtD;QAAA,qEAiCC;QA9BG,qBAAqB;QAEb,iBAAW,GAAW,CAAC,CAAA;QAC/B,gBAAgB;QAEhB,aAAO,GAAW,CAAC,CAAA;QACnB,kBAAkB;QACX,aAAO,GAAW,IAAI,CAAA;QAC7B,uBAAuB;QACf,aAAO,GAAW,CAAC,CAAA;QAE3B,cAAc;QACN,UAAI,GAAW,CAAC,CAAC,CAAA;QAQzB,qBAAqB;QACrB,cAAQ,GAAa,IAAI,CAAA;;IAS7B,CAAC;IApBG,sBAAI,gCAAM;aAAV,cAAc,OAAO,IAAI,CAAC,OAAO,CAAA,CAAC,CAAC;;;OAAA;IAGnC,sBAAI,iCAAO;aAKX,cAAgB,OAAO,IAAI,CAAC,IAAI,CAAA,CAAA,CAAC;aALjC,UAAa,KAAa;YACtB,+CAA+C;YAC/C,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,WAAW,CAAA,CAAC,CAAC,CAAC,CAAA;YACjD,IAAI,CAAC,IAAI,GAAG,KAAK,CAAA;QACrB,CAAC;;;OAAA;IAMD,+BAAQ,GAAR,cAAa,IAAI,CAAC,IAAI,CAAC,EAAE,CAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAA,CAAC,CAAC;IAEtF,gCAAS,GAAT,cAAc,IAAI,CAAC,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAA,CAAC,CAAC;IAEhF,oCAAa,GAArB;QACI,IAAI,IAAI,CAAC,QAAQ,EAAE;YAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAA;SAAE;IAC3D,CAAC;IA3BD;QADC,QAAQ,CAAE,EAAE,CAAC,KAAK,CAAC;qDACW;IAG/B;QADC,QAAQ,CAAE,EAAE,CAAC,KAAK,CAAC;iDACD;IANF,YAAY;QAFhC,OAAO;QACP,IAAI,CAAC,0BAA0B,CAAC;OACZ,YAAY,CA+BhC;IAAD,mBAAC;CA/BD,AA+BC,CA/ByC,EAAE,CAAC,SAAS,GA+BrD;kBA/BoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import LoopList from \"./LoopList\";\r\n\r\nconst {ccclass, property, menu} = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"UIExtension/LoopListItem\")\r\nexport default class LoopListItem extends cc.Component {\r\n    /// item start offset\r\n    @property( cc.Float)\r\n    private startOffset: number = 0\r\n    /// item padding\r\n    @property( cc.Float)\r\n    padding: number = 0\r\n    /// item cache key\r\n    public itemKey: string = null\r\n    /// record item offset \r\n    private _offset: number = 0\r\n    get offset(){ return this._offset }\r\n    /// item index\r\n    private _idx: number = -1\r\n    set itemIdx( value: number) {\r\n        /// set idx 的时候直接设置好对应的 offset 避免get 的时候再做if 判断\r\n        this._offset = (value === 0)? this.startOffset: 0\r\n        this._idx = value\r\n    }\r\n    get itemIdx() { return this._idx}\r\n    \r\n    /// current loop list\r\n    looplist: LoopList = null \r\n\r\n    onEnable() { this.node.on( cc.Node.EventType.SIZE_CHANGED, this.onSizeChanged, this) }\r\n\r\n    onDisable() { this.node.off( cc.Node.EventType.SIZE_CHANGED, this.onSizeChanged, this) }\r\n\r\n    private onSizeChanged() {\r\n        if( this.looplist) {  this.looplist.itemSizeChanged() }\r\n    }\r\n}"]}