{"version":3,"sources":["assets/gridtest.ts"],"names":[],"mappings":";;;;;AAAA,wDAAmD;AAEnD,oBAAoB;AACpB,wEAAwE;AACxE,mBAAmB;AACnB,kFAAkF;AAClF,8BAA8B;AAC9B,kFAAkF;AAE5E,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAsC,4BAAY;IADlD;QAAA,qEA6BC;QAzBG,cAAQ,GAAiB,IAAI,CAAA;QAG7B,eAAS,GAAiB,IAAI,CAAA;;QAqB9B,iBAAiB;IACrB,CAAC;IApBG,wBAAK,GAAL;QAEI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAE,UAAC,IAAkB,EAAE,GAAW;YACtD,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;YAC5B,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,aAAW,GAAK,CAAA;YACrD,OAAO,IAAI,CAAA;QACf,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,GAAG,CAAC,CAAA;QAEhC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAE,UAAC,IAAkB,EAAE,GAAW;YACvD,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;YAC5B,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,aAAW,GAAK,CAAA;YACrD,OAAO,IAAI,CAAA;QACf,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,SAAS,CAAC,YAAY,CAAE,GAAG,CAAC,CAAA;IACrC,CAAC;IAtBD;QADC,QAAQ,CAAE,sBAAY,CAAC;8CACK;IAG7B;QADC,QAAQ,CAAE,sBAAY,CAAC;+CACM;IANb,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA4B5B;IAAD,eAAC;CA5BD,AA4BC,CA5BqC,EAAE,CAAC,SAAS,GA4BjD;kBA5BoB,QAAQ","file":"","sourceRoot":"/","sourcesContent":["import LoopListGrid from \"./looplist/LoopListGrid\";\n\n// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class gridtest extends cc.Component {\n\n    @property( LoopListGrid)\n    gridview: LoopListGrid = null\n\n    @property( LoopListGrid)\n    hgridview: LoopListGrid = null\n\n    start () {\n        \n        this.gridview.initialize( (view: LoopListGrid, idx: number)=>{\n            let item = view.getNewItem()\n            item.getComponent(cc.Label).string = `v item\\n${idx}`\n            return item\n        })\n\n        this.gridview.setItemCount( 200)\n\n        this.hgridview.initialize( (view: LoopListGrid, idx: number)=>{\n            let item = view.getNewItem()\n            item.getComponent(cc.Label).string = `h item\\n${idx}`\n            return item\n        })\n\n        this.hgridview.setItemCount( 200)\n    }\n\n    // update (dt) {}\n}\n"]}